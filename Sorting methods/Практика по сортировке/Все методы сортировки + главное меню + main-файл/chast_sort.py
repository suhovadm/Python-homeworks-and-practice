# 5.
# Частичная сортировка.

# Импортируем стандартную библиотеку statistics для вычисления среднего арифметического в диапазоне.
import statistics

# Заводим список из 10 случайных чисел.
list = [25, 11, 40, 31, 60, 50, 7, 2, 5, 6]

# Заводим переменную, чтобы определить общее количество элементов в списке.
all = len(list)

# Находим общее количество элементов в списке и сразу принтуем на экран.
print('Общее количество элементов в списке:', len(list))

# Находим, чему равна длина одной трети списка, т.е. 10 // 3 = 3.
dlina = all // 3

# Вычисляем среднее арифметическое всех элементов списка с помощью
# библиотеки statistics и метода mean.
srednee = statistics.mean(list)

# Принтуем среднее арифметическое на экран.
print('Среднее арифметическое:', srednee)

# Теперь проверяем, что среднее арифметическое больше нуля.
if srednee > 0:

    # Если среднее арифметическое больше нуля, то длина удваивается.
    # В нашем случае srednee будет положительным, поэтому dlina станет 3 * 2 = 6.
    dlina *= 2

# Заводим переменную list2, в него копируем первые dlina элементов исходного списка.
# В данном случае это list[:6], то есть элементы с индексами 0-5.
list2 = list[:dlina]

# Новый список list2 сортируем по возрастанию.
list2.sort()

# Обновляем первые dlina элементов исходного списка, вставляя отсортированные значения из list2.
# Использование .copy() предотвращает возможные побочные эффекты при присваивании.
list[:dlina] = list2.copy()

# Теперь list2 получает оставшуюся часть исходного списка - начиная с индекса dlina (6) до конца.
# То есть элементы с индексами 6-9.
list2 = list[dlina:all]

# Реверсируем оставшуются 1/3 списка, т.е. просто переворачиваем в обратном порядке.
list2.reverse()

# Обновляем оставшуюся часть исходного списка, вставляя реверсированные элементы из list2.
list[dlina:all] = list2.copy()

# Выводим результат на экран.
print('Первые 2/3 списка отсортированы по возрастанию, последняя 1/3 просто в реверс:')
print(list)
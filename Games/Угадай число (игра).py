# Подключаем библиотеки.
# randint нужна для генерации случайных целых чисел в заданном диапазоне.
# time для получения текущего времени. Она позволит нам измерять время, затраченное на угадывание числа.

from random import randint
from time import time

# Основной цикл игры. Он будет продолжаться до тех пор, пока игрок не завершит игру.
while(True):

    # Генерация случайного числа.
    x = randint(1,500) # Числа в диапазоне от 1 до 500.
    attempt = 0 # Переменная с попытками.
    start_time = time() # Сохраняет текущее время в момент начала игры, чтобы потом можно было
    # измерить, сколько времени ушло на угадывание числа.

    # Принтуем первое сообщение о том, что игра началась и что ему (игроку) нужно угадать число в таком-то диапазоне.
    print('Я загадал число в диапазоне от 1 до 500. Угадай его!')

    # Второй, внутренний цикл для угадывания числа.
    # Он также будет продолжаться до тех пор, пока игрок не угадает число или не решит выйти из игры.
    while(True):

        # Ввод числа.
        # Запрашиваем у игрока ввод числа. Если игрок введёт 0, игра заканчивается.
        value1 = int(input("Число (или 0 для выхода):~$ "))

        # Проверяем, если игрок ввёл 0, то программа выводит сообщение о выходе и завершает
        # внутренний цикл, что приводит к повторению внешнего цикла.
        if value1 == 0: # Проверяем, хочет ли игрок выйти.
            print('Вы вышли из игры.')
            break # Данный конкретный break реагирует на 0, если игрок ввёл 0,
            # break завершает выполнение текущего цикла (внутреннего цикла угадывания).
            # В нашем случае, после выхода из внутреннего цикла, программа снова попадает
            # во внешний цикл, где будет сгенерированно новое число, если игрок решит продолжить игру.

        # Увеличение попыток и время.
        # Каждый раз, когда игрок делает попытку, счётчик попыток увеличивается на 1.
        # end_time сохраняет текущее время после попытки.
        attempt += 1
        end_time = time()

        # Если игрок угадал число (value1 равно загаданному x), программа поздравляет его и выводит
        # количество попыток и затраченное время, а затем завершает внутренний цикл.
        if value1 == x:
            print(f'Угадал!\n Количество попыток: {attempt}.')
            print(' Затраченное время:', end_time-start_time, 'секунд.')
            break

        # Если игрок ввёл число больше загаданного, программа сообщает, что ввод больше,
        # если меньше - сообщает, что ввод меньше.

        elif value1 > x:  # Если value1 больше икса.
            print('Ваше число больше загаданного.')

        elif value1 < x:  # Если value1 меньше икса.
            print('Ваше число меньше загаданного.')

    # Предложение сыграть снова.
    # После угадывания или выхода из игры программа предлагает игроку сыграть снова.
    # Если игрок вводит что-то кроме "да" вне зависимости от регистра, программа выводит
    # прощальное сообщение и завершает внешний цикл, что приводит к завершению игры.
    
    # strip() - убирает все пробелы в начале и в конце введённой строки. Это полезно,
    # чтобы избежать ошибок, если пользователь случайно введёт пробелы перед или после слова.
    
    # lower() - приводит всю строку к нижнему регистру. Это позволяет нам не беспокоиться о том,
    # как конкретно пользователь ввёл слово ДА, Да, или да. Оно всё будет одинаково.
    play_again = input('Играем снова? Да / нет?:~$ ').strip().lower()
    if play_again != 'да':
        print('До новых встреч.')
        break

# Реализуем алгоритм для нахождения наибольшего общего делителя (НОД) двух чисел
# с использованием рекурсивной функции. Простой вариант, заготовка.

# Запускаем цикл while, чтобы программа перезапускалась.
while(True):
    try:

        # Заводим функцию, передаём ей два параметра: value1 и value2.
        def NOD(value1, value2):

            if value2 == 0: # В качестве базового условия рекурсии задаём параметр,
                # что value2 == 0. Если value2 == 0, возвращаем value1.
                # То есть, если ввести например 5 и 0, вернётся значение 5.
                return value1
            # Если переделать return value1 на value2, будет возвращать 0,
            # так как value2 равен 0.

            # Иначе. Возвращаем функцию NOD, с параметрами:
            # находим остаток от деления у value1.
            # Например, 30 и 18, остаток от деления будет 12 (30 - 18 = 12).
            # Например, 15 и 5, остаток от деления будет 10 (15 - 5 = 10).
            # Например, 30 и 12, остаток от деления будет 18 (30 - 12 = 18).
            # И теперь, чтобы получить НОД, вычитаем из получившегося числа (12, 10, или 18)
            # value2, которое вводили изначально, и перекидываем его со знаком (+).
            else:
                return NOD(value2, value1 % value2)

        # Приглашение к вводу команд. Переменные value1 и value2. Здесь любые целочисленные значения.
        value1 = int(input('Введите первое число:~$ '))
        value2 = int(input('Введите второе число:~$ '))

        print(NOD(value1, value2)) # Принтуем функцию на экран.

    except: continue
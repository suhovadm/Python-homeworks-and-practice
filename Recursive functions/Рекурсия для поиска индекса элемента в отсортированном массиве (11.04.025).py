# Написание рекурсивной функции для поиска индекса элемента в отсортированном массиве.

# Заводим функцию binary_search, которая принимает в себя 2 аргумента - arr и target.
# arr - отсортированный массив, в котором мы будем искать элемент.
# target - элемент, который мы хотим найти в массиве arr.

def binary_search(arr, target):

    # Инициализация переменных left и right.
    # left устанавливается на 0, что соответствует первому индексу массива.
    # right устанавливается на len(arr) - 1, что соответствует последнему индексу массива.
    left, right = 0, len(arr) - 1
    
    # Цикл while.
    # Цикл будет выполняться до тех пор, пока left не станет больше right. Это означает, что
    # в массиве ещё могут находиться элементы для проверки.
    while left <= right:
        
        # Находим средний индекс.
        # mid - это индекс середины текущего диапазона. Мы используем целочисленное деление //,
        # чтобы получить целое число.
        mid = (left + right) // 2
        
        # Сравнение элемента в mid с target.
        # Если элемент в середине массива (arr[mid]) равен target, то мы нашли элемент, 
        # и функция возвращает индекс mid.
        if arr[mid] == target:
            return mid
        
        # Обновление границ поиска.
        # Если элемент в mid меньше target:
        # Это означает, что целевой элемент находится в правой части массива, поэтому мы
        # обновляем left (сдвигаем его вправо).
        elif arr[mid] < target:
            left = mid + 1
            
        # Если элемент в mid больше target:
        # Это означает, что целевой элемент находится в левой части массива, поэтому мы
        # обновляем right (сдвигаем его влево).
        else:
            right = mid - 1
    
    # Если элемент не нейден.
    # Если цикл завершается и элемент не найден, функция возвращает -1, что указывает на то,
    # что target отсутствует в массиве.
    return -1  # Элемент не найден.

# Создаём не отсортированный массив arr.
arr = [1, 5, 3]

# Перед вызовом функции применяем sorted(arr) для сортировки.
# На выходе получим отсортированный массив [1, 3, 5].
# Затем вызываем binary_search, чтобы найти индекс элемента 3 в отсортированном массиве.
index = binary_search(sorted(arr), 3)

# Вывод индекса.
# Выводим индекс элемента 3, который будет равен 1, так как 3 находится на втором месте
# в отсортированном массиве [1, 3, 5].
print("Индекс элемента 3:", index)
# Нахождение НОД через встроенную функцию math.gcd.
# В данном конкретном примере нет рекурсии.
# Он описан просто как дополнение к предыдущему примеру (нахождение НОД рекурсией через остаток от деления).

# Импортируем библиотеку math, которая предоставляет доступ к математическим функциям,
# включая функцию gcd для нахождения наибольшего общего делителя (НОД).
import math

# Запускаем бесконечный цикл while, чтобы программа перезапускалась.
while(True):

    # Заводим функцию NOD, которая принимает в себя 2 аргумента: value1 и value2.
    # Эти аргументы будут представлять 2 числа, для которых мы хотим найти НОД.
    def NOD(value1, value2):

            # Проверяем, равны ли оба значения нулю.
            # Если оба значения равны нулю, возвращаем 0 как результат.
            if value1 == 0 and value2 == 0:
                return 0

            # Вычисление НОД.
            # Если одно, или оба из чисел не равно нулю, мы используем функцию math.gcd(value1, value2)
            # для вычисления НОД и возвращаем результат.
            # В данном случае, math.gcd не является рекурсивным методом, а просто вызывает встроенную
            # функцию для нахождения НОД.
            else:
                return math.gcd(value1, value2)

    # Приглашение к вводу команд (целых чисел, int).
    try:
        value1 = int(input('Введите первое число:~$ '))
        value2 = int(input('Введите второе число:~$ '))

    # Вывод результата. Вызываем функцию NOD с введёнными числами и выводим результат на экран.
        print(NOD(value1, value2))
    except ValueError:
        print('Пожалуйста, введите целые числа!')
# Задача:
# дано некоторое количество кортежей, например 3 шт.
# Нужно найти все числа, которые есть во всех трёх кортежах
# и числа, которые встречаются на одних и тех же позициях.

# Заводим 3 кортежа. Дано.
numbers1 = (1, 2, 3, 4, 5)
numbers2 = (1, 3, 5, 4, 0)
numbers3 = (1, 2, 7, 4, 5)

# Переводим кортежи во множества.
set1 = set(numbers1)
set2 = set(numbers2)
set3 = set(numbers3)

# Заводим рандомную переменную и включаем пересечение множеств для каждого из кортежей.
result = set1.intersection(set2).intersection(set3)

# Перекидываем первый result из множества в кортеж и принтуем на экран.
print('Числа, которые есть во всех трёх кортежах:')
print(tuple(result))

# Заводим пустой список для хранения чисел, которые есть во всех трёх кортежах.
result_of_numbers = []

# Запускаем цикл for. Смотрим количество элементов в самом первом кортеже.
for i in range(len(numbers1)):

    # Сравниваем количество элементов во всех трёх кортежах.
    if numbers1[i] == numbers2[i] == numbers3[i]:

        # Желательно, чтобы оно совпадало. Количество элементов в 1-м кортеже не должно быть больше,
        # чем в других. Если оно превышает диапазон хотябы на 1 элемент, работать не будет,
        # так как это не подпадает под условие ==.

        # Подкидываем в пустой список все значения, которые сравнивали выше.
        # Почему именно numbers1[i] ?
        # В цикле for i in range(len(numbers1)) мы проходим по индексам элементов первого
        # кортежа numbers1, наше условие: if numbers1[i] == numbers2[i] == numbers3[i]
        # В данном случае, мы проверяем, равны ли элменты на одинаковых позициях во всех трёх
        # кортежах. То есть, если условие выполняется, то элемент на позиции i во всех трёх
        # кортежах одинаковый.
        result_of_numbers.append(numbers1[i])

# Перекидываем второй result из списка в кортеж и принтуем на экран.
print('Числа, которые есть на одних и тех же позициях:')
print(tuple(result_of_numbers))
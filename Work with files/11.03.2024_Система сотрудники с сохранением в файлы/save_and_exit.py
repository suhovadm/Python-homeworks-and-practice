# 6.
# --- Выход из программы с автосейвом в файл OUT.txt ---

# Логика файла:
# Функция save_and_exit() пытается открыть файл IN.txt для чтения и файл OUT.txt на запись.
# Если оба файла успешно открываются, она копирует содержимое IN.txt в OUT.txt построчно.
# Если исходный файл не найден, выводится сообщение об ошибке. После выполнения функции
# вызывается автоматическое закрытие файлов (благодаря with), а также, если всё прошло
# успешно, выводится сообщение об успешном сохранении данных.

# Заводим функцию save_and_exit():
def save_and_exit():
    try:

        # Открываем файл IN.txt на чтение, задаём ему кодировку utf-8, задаём ему алиас f5.
        # Следом за ним открываем файл OUT.txt на запись, задаём ему кодировку utf-8, задаём ему алиас f6.
        # with обеспечит нам автоматическое закрытие файлов после выхода из блока.
        with open('IN.txt', 'r', encoding='utf-8') as f5, open('OUT.txt', 'w', encoding='utf-8') as f6:

        # Цикл for построчно перебирает строки файла IN.txt (f5).
        # На каждой итерации переменная line содержит текущую строку из файла.
            for line in f5:

        # Записываем текущую строку line в файл OUT.txt (f6).
        # Таким образом, содержимое файла IN.txt полностью копируется в файл OUT.txt
                f6.write(line)

        # Оповещаем об этом пользователя.
        print('[ База данных автоматически сохранена в файл OUT.txt ]')

    except FileNotFoundError:
        print('Извините, файл IN.txt не найден.')
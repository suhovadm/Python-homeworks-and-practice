# 4.
# --- Удаление записи сотрудника из БД. ---
# 22.06.2025 добавлена проверка на имеющегося сотрудника в БД.

# Заводим функцию perform_delete():
def perform_delete():
    try:

    # with - менеджер контекста, который гарантирует автоматическое закрытие файла после завершения блока.
    # Открываем файл IN.txt на чтение с кодировкой utf-8, задаём ему алиас f для дальнейших манипуляций.
        with open('IN.txt', 'r', encoding='utf-8') as f:

    # Считываем все строки из файла и сохраняем их в список lines.
    # Каждая строка файла становится элементом списка, включая символы переноса строки ('\n').
            lines = f.readlines()

    # Говорим пользователю о том, где он сейчас.
        print('[ Вы находитесь в меню 4, удаление сотрудника из БД. \n  Внимание! Данный параметр сносит всю запись целиком! ]')

    # Приглашение к вводу команды на удаление сотрудника из БД.
        value = input('Введите ФИО сотрудника для удаления из БД:~$ ')

    # Запоминаем исходное количество строк в файле перед удалением.
    # Это используется для проверки, была ли найдена и удалена запись.
        original_count = len(lines)

    # Создаём новый список lines, включающий только те строки из исходного файла, в которых НЕ содержится
    # введённое пользователем значение value. Это достигается с помощью спискового включения (list comprehension).
    # В результате, все строки, содержащие ФИО, введённое пользователем, будут исключены.
        lines = [line for line in lines if value not in line]

    # Проверяем, остались ли строки после фильтрации таких же, как было изначально.
    # Если да, значит, запись была найдена (ничего не удалено).
        if len(lines) == original_count:
            print('[ Запись не найдена в базе данных! ]')
        else:
            print('[ Запись из базы данных удалена! ]')

    # Снова открываем файл IN.txt, только теперь уже на запись с кодировкой utf-8, задаём ему
    # всё тот же алиас f для дальнейших манипуляций.
        with open('IN.txt', 'w', encoding='utf-8') as f:

    # Записываем обновлённый список строк lines обратно в файл.
    # Каждая строка из списка будет добавлена в файл без автоматического добавления символов переноса строки,
    # так как строки уже содержат их.
            f.writelines(lines)

    except FileNotFoundError:
        print('Извините, файл IN.txt не найден.')
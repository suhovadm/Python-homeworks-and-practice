# 5.
# --- Замена сразу всех параметров в базе данных. ---

# Заводим функцию perform_replace():
# Оператор return используется для немедленного выхода из функции.
def perform_replace():
    try:

        # Открываем файл IN.txt на чтение с кодировкой utf-8, задаём ему алиас f4 для дальнейших манипуляций.
        # Конструкция with обеспечивает автоматическое закрытие файла после завершения блока.
        with open('IN.txt', 'r', encoding='utf-8') as f4:

            # f4.read() читает всё содержимое файла и сохраняет его в переменную content4.
            content4 = f4.read()

    except FileNotFoundError:
        print('Извините, файл IN.txt не найден.')
        return

    # Подменюшка внутри меню 4.
    print('[ Вы находитесь в меню 4, замена сразу всех параметров ]')
    print('[ Внимание! Данная опция меняет сразу все параметры в базе данных ]')
    print('1. ФИО.')
    print('2. Возраст.')
    print('3. Телефоны.')
    print('4. Номера кабинетов.')

    # Приглашение к вводу команды, выбор пункта меню выше.
    try:
        choice = int(input('Что надо заменить:~$ '))
    except ValueError:
        print('Ошибка! Похоже, что вы ввели букву, или спец. символ.\nПожалуйста, выберите пункт от 1 до 4.')
        return

    # Редактирование ФИО.
    if choice == 1:

        old_value = input('Введите старое ФИО сотрудника:~$ ')
        new_value = input('Введите новое ФИО сотрудника:~$ ')

    # Редактирование возраста.
    elif choice == 2:

        old_value = input('Введите старый возраст:~$ ')
        new_value = input('Введите новый возраст:~$ ')

    # Редактирование телефона.
    elif choice == 3:

        old_value = input('Введите старый телефон:~$ ')
        new_value = input('Введите новый телефон:~$ ')

    # Редактирование кабинета (номера кабинета).
    elif choice == 4:

        old_value = input('Введите старый кабинет:~$ ')
        new_value = input('Введите новый кабинет:~$ ')

    # Обработка ошибки на тему того, что выбран не верный пункт меню.
    else:
        print('Извините, выбран неверный пункт меню. Пожалуйста, выберите пункт от 1 до 4.')
        return

    # Ещё одна обработка ошибки. Здесь мы проверяем, есть ли старое значение в переменной content4.
    # То есть, совпадает ли значение, которое ввёл пользователь с тем, что считалось из файла через f4.read().
    if old_value not in content4:
        print('Извините, значение для замены не найдено.')
        return

    # Заводим новую переменную new_content и делаем замену старого значения на новое, которое ввёл пользователь.
    new_content = content4.replace(old_value, new_value)

    # Вывод результата, т.е. переменной new_content.
    print('Обновлённый контент:')
    print(new_content)

    # Запись в файл.
    # Снова открываем файл IN.txt, только теперь уже на чтение, снова в кодировке utf-8, опять задаём алиас f4
    # и через этот алиас делаем запись в переменную new_content.
    with open('IN.txt', 'w', encoding='utf-8') as f4:
        f4.write(new_content)

    # Оповещаем пользователя о том, что все параметры успешно обновлены.
    print('Все параметры успешно обновлены!')
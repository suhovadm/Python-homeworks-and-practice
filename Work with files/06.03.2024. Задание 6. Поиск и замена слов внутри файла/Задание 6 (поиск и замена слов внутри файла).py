# Дан текстовый файл. Найти и заменить в нем заданное слово.
# Что искать и на что заменять определяется пользователем.
# Данный скрипт может менять как слова, так и предложения целиком...

# Запускаем бесконечный цикл, чтобы программа не закрывалась.
while(True):

    # Открываем файл IN.txt на чтение, задаём ему кодировку utf-8 и алиас f1.
    # with гарантирует нам, что файл будет автоматически закрыт после выполнения блока кода.
    with open ('IN.txt', 'r', encoding='utf-8') as f1:

        # Здесь просто говорим открыть файл на чтение - read()
        # Если открыть его на readlines, работать не будет.
        # Почему так? Потому что read() читает весь файл целиком в одну строку, что удобно для глобальной
        # замены всего текста, тогда как readlines() возвращает список строк, и для глобальной замены придётся
        # дополнительно объединять их. В данном случае, read() обеспечивает более простую и прямую обработку
        # всего файла целиком.
        content = f1.read()

        # Приглашение к вводу команды.
        # strip() убирает пробелы, если таковые случайно ввёл пользователь перед или после слова.
        value1 = input('Введите слово, или предложение которое нужно найти:~$ ').strip()

        # Проверка на тот случай, если пользователь ввёл только пробелы.
        if value1 == '' or value1.isspace():
            print('\nОшибка! Введено пустое значение, или пробелы.\n')
            continue # Переброс к началу цикла while.

        # Если пользователь ввёл что-то допустимое, то...
        else:

            # Запрашиваем у пользователя слово, или предложение на которое меняем.
            # strip() также убирает все лишние пробелы.
            value2 = input('Введите слово, или предложение на которое меняем:~$ ').strip()

            # Заводим переменную value3, кидаем в неё переменную content, подключаем к ней .replace
            # и присваиваем ему value1 и value2, т.е. то, что нужно найти и то, на что надо заменить.
            # !!! В данном случае, замена слов в разном регистре подтягивается сама, ничего дописывать не надо !!!
            # !!! то есть, hello world заменится на HELLO WORLD !!!
            value3 = content.replace(value1, value2)

            # Принтуем результат замены на экран.
            print('Результат:')
            print(value3)

            # Открываем, или создаём файл OUT.txt на запись, задаём ему кодировку utf-8 и алиас f2.
            # with обеспечит нам автоматическое закрытие файла после выполнения блока кода.
            with open('OUT.txt', 'w', encoding='utf-8') as f2:

                # Записываем полученный текст value3 в файл OUT.txt
                f2.write(value3)

            # Спрашиваем у пользователя, хочет ли он выйти из программы.
            # strip() удаляет лишние пробелы.
            # lower() переводит все символы строки в нижний регистр для удобства ввода вариантов да/нет.
            exit_choice = input('Хотите выйти? (да/нет):~$ ').strip().lower()

            # Если пользователь ввёл на русском 'да', или на английском 'yes',
            if exit_choice == 'да' or exit_choice == 'yes':

                # то программа закрывается, прерывая цикл while брейком.
                break